openapi: 3.0.0
info:
  title: common
  version: ''
  description: Common Schemas available for all workgroups to reuse.  A UML diagram depicting this structure is [linked here](https://raw.githubusercontent.com/redblue36/DataFormatDemoSwaggerUI/master/diagrams/common.png).
  contact:
    name: Ben Kothari
    url: 'http://www.acuwize.com'
servers: []
paths:
  /common: {}
components:
  schemas:
    WeightMeasure:
      title: WeightMeasure
      type: object
      properties:
        UOM:
          type: string
          enum:
            - lbs
          description: Unit of measurement
        value:
          type: string
          example: '5'
        type:
          type: string
          enum:
            - actual
            - gross
            - billed
            - (manifested)/estimated/declared
            - tare
            - VGM
            - dimensional (ANSI)
            - total
        time:
          type: string
          example: '2013-08-13T05:14:33-07:00'
          description: "ISO 8601 Data elements and interchange formats – Information interchange – Representation of dates and times"
    DimensionMeasure:
      title: DimensionMeasure
      type: object
      properties:
        length:
          type: string
        width:
          type: string
        height:
          type: string
        dimensionUOM:
          type: string
          description: Dimension unit of measurement
        volume:
          type: string
        volumeUOM:
          type: string
        type:
          type: string
          enum:
            - actual
            - manifested
            - gross
        time:
          type: string
          description: "ISO 8601 Data elements and interchange formats – Information interchange – Representation of dates and times"
    ClimateMeasure:
      title: ClimateMeasure
      type: object
      properties:
        UOM:
          type: string
          description: Unit of measurement
        value:
          type: string
        readPoint:
          type: string
          enum:
            - locationID
            - equipmentID
            - nose
            - tail
            - head (location as granular as possible where measure was taken)
        climateType:
          type: string
          enum:
            - temperature
            - humidity
            - vibration
        type:
          type: string
          enum:
            - actual
            - billed
            - manifested
            - min
            - max
            - relative
        time:
          type: string
          description: ISO 8601 Data elements and interchange formats – Information interchange – Representation of dates and times
    Reference:
      title: Reference
      type: object
      properties:
        name:
          type: string
          enum:
            - Description of Cargo
            - Special instructions
            - Exceptions
            - Comments
          description: ''
        description:
          type: string
        type:
          type: string
          enum:
            - Export
            - Local
        time:
          type: string
    Identity:
      title: Identity
      type: object
      properties:
        ID:
          type: string
          example: '474767'
        IDAuthority:
          type: string
          enum:
            - 'D&B'
            - SCAC
            - GTIN
        type:
          type: string
          description: Any categorization
    Signature:
      type: object
      title: Signature
      properties:
        signatureHash:
          type: string
          description: cryptographic certification by party.  It may change by each transaction.
        signatureTime:
          type: string
          example: ISO 8601 format
        algorithm:
          type: string
          example: PKCS
        partyID:
          type: string
    Seal:
      title: Seal(attribute-of-HandlingUnit)
      type: object
      properties:
        title:
          type: string
        inspectedTime:
          type: string
          example: ISO 8601 format
        status:
          type: string
        signatories:
          type: array
          enum:
            - sealedBy
            - inspectedBy
          items:
            $ref: '#/components/schemas/Signature'
    Commodity:
      title: Commodity
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        agency:
          type: string
          enum:
            - NMFC
            - STCC
            - SITC
            - HTS codes
        code:
          type: string
          enum:
            - actual code
        shippingName:
          type: string
        packagingGroup:
          type: string
          description: specific packaging requirements
        isHazmat:
          type: boolean
          description: redundant but convenient
        hazmat:
          type: array
          items:
            $ref: '#/components/schemas/HazardousMaterial'
    HazardousMaterial:
      title: HazardousMaterial
      type: object
      properties:
        classification:
          type: string
          enum:
            - chemical
            - biological
            - radioactive
            - environmental
            - physical
            - health
        agency:
          type: string
          enum:
            - GHS
            - HMIS
            - OHSA
            - DOT
            - UNNA
        code:
          type: string
          enum:
            - actual code
        hazmatClass:
          type: string
          description: different classess of hazardous material
        documents:
          type: array
          description: specific hazardous material documents.  All other general documents may be attached to HandlingUnit.
          items:
            $ref: '#/components/schemas/Document'
    Meta:
      title: Meta
      type: object
      x-header: this is header text
      x-footer: this is footer description
      properties:
        version:
          type: string
          description: version number associated with the specification
        reportedByID:
          type: string
          description: Link to reporting Party ID
        reportedByRole:
          type: string
          description: Role of reporting Party
        ID:
          type: string
      required:
        - version
        - reportedByID
        - ID
    Document:
      title: Document(TBD)
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        type:
          type: string
        URI:
          type: string
          description: 'actual URI of the document if it is stored in 3rd party document store like Amazon S3, ipfs, storj, etc..'
        authors:
          type: object
          properties:
            'Idenity ':
              type: array
              items: {}
        hasHash:
          description: 'store file data in 3rd party store like ipfs, storj, or Amazon S3, which returns a unique fingerprint hash.  If hash is stored in data attribute, then hasHash = True, else False'
          type: boolean
        data:
          type: string
          description: |-
            1)  Base64 String - convert file data to Base64 String (HyperLedger allows 10 GB of String data)
            2)  store hash String which is unique fingerprint of the document stored somewhere else.
        version:
          type: string
        sheetCount:
          type: string
        includeList:
          type: array
          items:
            $ref: '#/components/schemas/AccessControl'
        excludeList:
          type: array
          description: 'principals listed in exclude will never get access to this document, excludeList takes precedence of includeList'
          items:
            $ref: '#/components/schemas/AccessControl'
    AccessControl:
      title: AccessControl(TBD)
      type: object
      properties:
        principal:
          type: string
          description: 'Could be any party, role or group (ALL = anyone has access)'
          enum:
            - party123
            - CarrierRole
        permission:
          type: string
          enum:
            - Read
            - Write
            - Admin
    TrackableEntity:
      title: TrackableEntity
      type: object
      properties:
        parentEntityID:
          type: string
          enum:
            - HandlingUnit
            - ShipUnit
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
    Remarks:
      title: Remarks
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
